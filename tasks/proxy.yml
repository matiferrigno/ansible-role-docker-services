---

- set_fact:
    certs_root: "{{ docker_services_root_path }}reverse-proxy/certs"

- name: Generate CA private key certificate
  community.crypto.openssl_privatekey:
    path: "{{ certs_root }}/ca.key"
    size: 4096

- name: Generate CA certificate signing request
  community.crypto.openssl_csr:
    path: "{{ certs_root }}/ca.csr"
    privatekey_path: "{{ certs_root }}/ca.key"
    common_name: CA
    basic_constraints:
      - CA:TRUE
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
      - digitalSignature
    key_usage_critical: true

- name: Generate CA self-signed public certificate
  community.crypto.x509_certificate:
    path: "{{ certs_root }}/ca.crt"
    privatekey_path: "{{ certs_root }}/ca.key"
    csr_path: "{{ certs_root }}/ca.csr"
    provider: selfsigned

- name: Add certs to traefik
  blockinfile:
    path: "{{ docker_services_root_path }}reverse-proxy/config.d/certs.yml"
    create: true
    block: |
      tls:
        certificates:
        {% for i in s.ingress | default([]) %}
        {% for h in i.hosts | default([]) %}
          - certFile: "{{ certs_root }}/{{ h.host }}.crt"
            keyFile: "{{ certs_root }}/{{ h.host }}.key"
        {% endfor %}
        {% endfor %}
  loop: "{{ docker_services }}"
  loop_control:
    loop_var: s

- name: Create reverse-proxy
  include_tasks: service.yml
  loop:
    - name: reverse-proxy
      compose_files:
        - docker-compose.yml
      perform:
        - action: mkdir
          dest: ./config.d
        - action: mkdir
          dest: ./certs
        - action: content
          dest: docker-compose.yml
          content: |
            # Generated by Ansible
            #   role: matiferrigno.docker-services

            version: '3'

            networks:
              {{ docker_services_proxy_network }}:
                name: {{ docker_services_proxy_network }}

            services:
              reverse-proxy:
                image: {{ docker_services_proxy_image }}
                command: {{ docker_services_proxy_command }}
                networks:
                  - {{ docker_services_proxy_network }}
                ports:
                  - "{{ docker_services_proxy_http_port }}:80"
                  - "{{ docker_services_proxy_https_port }}:443"
            {% for port in docker_services_proxy_extra_ports %}
                  - "{{ port }}:{{ port }}"
            {% endfor %}
                volumes:
                  - ./config.d:/config.d
                  - ./certs:/certs
                  - {{ docker_services_docker_sock }}:/var/run/docker.sock
            {% for volume in docker_services_proxy_extra_volume %}
                  - "{{ volume }}"
            {% endfor %}
                labels:
                - "traefik.enable=true"
                - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                - "traefik.http.routers.traefik.entrypoints=web,websecure"
                - "traefik.http.routers.traefik.tls=true"
                - "traefik.http.routers.traefik.rule=Host(`{{ docker_services_proxy_dashboard_url }}`)"
                - "traefik.http.routers.traefik.entrypoints=websecure"
                - "traefik.http.routers.traefik.service=api@internal"
                - "traefik.http.routers.traefik.middlewares=traefik-auth"
                - "traefik.http.middlewares.traefik-auth.basicauth.users={{ docker_services_proxy_dashboard_users }}"
            {% for label in docker_services_proxy_extra_labels | default([]) %}
                - "{{ label }}"
            {% endfor %}
